process {
    publishDir = {"./results/$sid/$task.process"}
    scratch = true
    errorStrategy = { task.attempt <= 3 ? 'retry' : 'ignore' }
    maxRetries = 3
    maxErrors = -1
    stageInMode = 'copy'
    stageOutMode = 'rsync'
    tag = { "$sid" }
    afterScript = 'sleep 1'
}

params {
    //**PFT seeding mask**//
        pft_seeding_mask_type="wm"
        pft_fa_seeding_mask_theshold=0.1

    //**PFT tracking**//
        run_pft_tracking=true
        pft_compress_streamlines=true
        pft_algo="prob"
        pft_seeding="npv"
        pft_nbr_seeds=10
        pft_step=0.5
        pft_theta=20
        pft_sfthres=0.1
        pft_sfthres_init=0.5
        pft_min_len=20
        pft_max_len=200
        pft_particles=15
        pft_back=2
        pft_front=1
        pft_compress_value=0.2
        pft_random_seed=0

    //**Local seeding mask**//
        local_seeding_mask_type="wm"
        local_fa_seeding_mask_theshold=0.1

    //**Local tracking mask**//
        local_tracking_mask_type="wm"
        local_fa_tracking_mask_theshold=0.1

    //**Local tracking**//
        run_local_tracking=false
        local_compress_streamlines=true
        local_algo="prob"
        local_seeding="npv"
        local_nbr_seeds=10
        local_step=0.5
        local_theta=20
        local_sfthres=0.1
        local_sfthres_init=0.5
        local_min_len=20
        local_max_len=200
        local_compress_value=0.2
        local_random_seed=0

    //**Number of processes per tasks**//
        processes_brain_extraction_t1=4
        processes_denoise_dwi=4
        processes_denoise_t1=4
        processes_eddy=1
        processes_fodf=4
        processes_registration=4

    //**Template T1 path**//
        template_t1="/human-data/mni_152_sym_09c/t1"

    //**Output directory**//
        output_dir=false

    //**Process control**//
        processes = false

    Readme_Publish_Dir = "./results/Readme"
}

if(params.output_dir) {
    process.publishDir = {"$params.output_dir/$sid/$task.process"}
    params.Readme_Publish_Dir = "${params.output_dir}/Readme"
}

if(params.processes) {
    if(params.processes > Runtime.runtime.availableProcessors()) {
        throw new RuntimeException("Number of processes higher than available CPUs.")
    }
    else if(params.processes < 1) {
        throw new RuntimeException("When set, number of processes must be >= 1 " +
                                   "and smaller or equal to the number of CPUs.")
    }
    else {
        executor.$local.cpus = params.processes
    }
}

singularity.autoMounts = true

profiles {

    fully_reproducible {
        params.processes_brain_extraction_t1=1
        params.processes_denoise_dwi=4
        params.processes_denoise_t1=4
        params.processes_eddy=1
        params.processes_fodf=4
        params.processes_registration=1
    }

    macos {
            process.scratch="/tmp"
    }

}
